//===================================================================
//
// ウインドウの処理　[enemy.h]
// Author: fukuyama syuya
//
//===================================================================
#ifndef _ENEMY_H_
#define _ENEMY_H_

#include "main.h"

//=================================================================================================
//マクロ定義
//=================================================================================================
#define MAX_ENEMY (256)		//敵の最大数

//=================================================================================================
//敵の状態
//=================================================================================================
typedef enum
{
	ENEMYSTATE_NORMAL,		//通常
	ENEMYSTATE_DAMAGE,		//ダメージ状態
	ENEMY_MAX,
}ENEMYSTATE;

//=================================================================================================
//敵の構造体
//=================================================================================================
typedef struct
{
	D3DXVECTOR3 pos;		//位置
	int nMove;				//移動量
	int nType;				//種類
	int nLife;				//体力
	bool bUse;				//使用しているかどうか
	ENEMYSTATE state;		//状態
	int nCounterstate;		//状態カウンター
}ENEMY;

//=================================================================================================
//プロトタイプ宣言
//=================================================================================================
HRESULT InitEnemy(void);
void UninitEnemy(void);
void DrawEnemy(void);
void UpdateEnemy(void);
void SetEnemy(D3DXVECTOR3 pos, int nLife, int nType, int nMove);
ENEMY *GetENEMY(void);
int GetCntEnemy(void);
bool HitEnemy(int nIdx, int nDamege);

#endif 



